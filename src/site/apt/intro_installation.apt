   ----------------------------
   Installation 
   ----------------------------

Installation Guide

  Please read the topics in this guide from top to bottom.
  
  C5Connector.Java uses the state-of-the-art logging facade {{{http://www.slf4j.org}SLF4J}}.
  You should read the corresponding manual, if you are not familiar with it!

* Prepare the Installation

  The current version can be downloaded	from {{{https://sourceforge.net/projects/c5connectorjava/files/}Sourceforge}}.
  There is a zip file like <<<c5connector-java-[version]-bin.zip>>> which contains all binaries
  of the project dependencies. Simply put these files in your classpath (usually <<<WEB-INF/lib>>>).
  Don't forget to add a preferred SLF4J binding!

  However, the binary zip file can be easily built with maven2, too. 
  Just download the source, declare a preferred SLF4J binding in the dependencies section of your POM within 
  the runtime scope and call the following command:
  
+---+
mvn clean package
+---+

  Alternativly, you can use the public maven-repository which is provided by the author. In order to use it, 
  you have to add the following snippets to your pom:
  

+------------------------------------------------------------------------------+
	<repositories>
		<repository>
			<id>thischwa-repo</id>
			<url>http://maven-repo.thischwa.codes/</url>
		</repository>
	</repositories>
+------------------------------------------------------------------------------+

   To the dependencies add the following:

+------------------------------------------------------------------------------+
	<dependency>
		<groupId>codes.thischwa.c5c</groupId>
		<artifactId>c5connector-java</artifactId>
		<version>${c5connector.version}</version>
	</dependency>
+------------------------------------------------------------------------------+  


* Activation of the Connector Servlet
   
  It takes two steps to enable it.
  
  [[1]]  To enable the conector servlet the following entries must be declared in your <<<web.xml>>>:
  
+---+
<servlet>
  <servlet-name>ConnectorServlet</servlet-name>
  <servlet-class>codes.thischwa.c5c.ConnectorServlet</servlet-class>
  <load-on-startup>1</load-on-startup>
</servlet>
<servlet-mapping>
  <servlet-name>ConnectorServlet</servlet-name>
  <url-pattern>/filemanager/connectors/java/*</url-pattern> 	
</servlet-mapping>

<!- and for using the dynamic config generation you need the following entries, They aren't mandatory -->
<servlet-mapping>
  <servlet-name>ConnectorServlet</servlet-name>
  <url-pattern>/filemanager/scripts/filemanager.config.js</url-pattern> 	
</servlet-mapping>
<servlet-mapping>
  <servlet-name>ConnectorServlet</servlet-name>
  <url-pattern>/filemanager/scripts/filemanager.config.js.default</url-pattern> 	
 </servlet-mapping>
+---+
  
  Assuming the filemanager has been installed in the <<</filemanager>>> folder in your webapp.\ 

  [[1]] Inside the sub-directory <scripts> make a copy of the file <<<filemanager.config.js.default>>> 
  and rename it to <<<filemanager.config.js>>>. Change the option property <lang> to 'java'.
        
  A complete reference of all settings can be found {{{https://github.com/simogeo/Filemanager/wiki/Filemanager-configuration-file}here}}